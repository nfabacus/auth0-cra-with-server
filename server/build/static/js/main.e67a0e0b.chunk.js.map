{"version":3,"sources":["utils/base64URLEncode.js","utils/sha256.js","components/profile.tsx","pages/Login.tsx","pages/Dashboard.tsx","utils/handleErrors.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["base64URLEncode","str","toString","replace","sha256","buffer","crypto","createHash","update","digest","Profile","user","src","picture","alt","name","email","Login","onClick","console","log","code_verifier","randomBytes","challenge","state","nonce","auth0Values","scope","process","audience","redirect_uri","sessionStorage","setItem","JSON","stringify","auth0LoginUrl","window","location","href","Dashboard","useEffect","csrfToken","handleErrors","res","ok","Error","statusText","json","App","search","useState","setUser","fetch","headers","credentials","cache","then","result","catch","err","queryObj","split","reduce","acc","item","key","value","sessionObj","getItem","body","parse","method","e","removeItem","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e67a0e0b.chunk.js","sourcesContent":["const base64URLEncode = (str) => {\n  return str.toString('base64')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n};\n\nexport default base64URLEncode;","import crypto from 'crypto';\nconst sha256 = (buffer) => {\n  return crypto.createHash('sha256').update(buffer).digest();\n};\n\nexport default sha256;","import React, { useEffect, useState, FC } from \"react\";\n\ninterface ProfileProps {\n  user?: { picture?: string; name?: string; email?: string };\n}\n\nconst Profile:FC<ProfileProps> = ({ user }) => {\n\n  // useEffect(() => {\n  //   const getUserMetadata = async () => {\n  //     try {\n  //       const response = await fetch('/api/user_details', {\n  //         headers: { 'Content-Type': 'application/json', 'x-csrf-token': window.csrfToken },\n  //         credentials: 'include'\n  //       });\n  //\n  //       console.log('user_details response >>', response);\n  //       if (!response.ok) {\n  //         return;\n  //       }\n  //       const { user } = await response.json();\n  //       setUser(user);\n  //     } catch (e) {\n  //       console.log('error message>>>', e);\n  //     }\n  //   };\n  //   getUserMetadata();\n  // }, []);\n\n  return (\n    user ? (\n      <div>\n        <img src={user?.picture} alt={user?.name} />\n        <h2>{user?.name}</h2>\n        <p>{user?.email}</p>\n      </div>\n    ) : (\n      <div>\n        <h2>No User Data</h2>\n      </div>\n    )\n  );\n};\n\nexport default Profile;","import React, { FC, useEffect, useState } from 'react';\nimport base64URLEncode from '../utils/base64URLEncode';\nimport crypto from 'crypto';\nimport sha256 from '../utils/sha256';\nimport Profile from '../components/profile';\n\ninterface LoginProps {\n  user: any;\n}\n\nconst Login: FC<LoginProps> = ({ user }) => {\n\n  const loginWithAuth0 = () => {\n    const code_verifier = base64URLEncode(crypto.randomBytes(32));\n    const challenge = base64URLEncode(sha256(code_verifier));\n    const state = base64URLEncode(crypto.randomBytes(32));\n    const nonce = base64URLEncode(crypto.randomBytes(32));\n\n    const auth0Values = {\n      nonce,\n      code_verifier,\n      scope: process.env.REACT_APP_SCOPE,\n      audience: process.env.REACT_APP_AUDIENCE,\n      redirect_uri: process.env.REACT_APP_AUTH0_REDIRECT_URI\n    };\n\n    sessionStorage.setItem('a0.spajs.txs', JSON.stringify(auth0Values));\n\n    const auth0LoginUrl =\n      `https://${process.env.REACT_APP_AUTH0_DOMAIN}/authorize?audience=${process.env.REACT_APP_AUDIENCE}&scope=${process.env.REACT_APP_SCOPE}&client_id=${process.env.REACT_APP_AUTH0_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_AUTH0_REDIRECT_URI}&response_type=code&response_mode=query&state=${state}&nonce=${nonce}&code_challenge=${challenge}&code_challenge_method=S256&auth0Client=${process.env.REACT_APP_AUTH0_CLIENT}`\n\n    window.location.href = auth0LoginUrl;\n  };\n\n  const logout = () => {\n    console.log('logout!');\n    // setIsAuthenticated(false);\n  }\n\n  return (\n    <div>\n      <h1>Log In Page</h1>\n      <div>\n        {\n          !user ? (\n            <button onClick={loginWithAuth0}>\n              Log In\n            </button>\n          ) : (\n            <div>\n              <Profile user={user} />\n              <div>\n                <button onClick={logout}>\n                  Log Out\n                </button>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","import React, {useEffect} from 'react';\n\nconst Dashboard = () => {\n  useEffect(() => {\n    console.log('csrfToken >>>', window.csrfToken);\n  }, []);\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <p>Hello, welcome!</p>\n    </div>\n  );\n};\n\nexport default Dashboard;","const handleErrors = (res: any) => {\n  console.log('handleErrors res >>', res);\n  if(!res.ok) throw Error(res.statusText);\n  return res.json();\n}\n\nexport default handleErrors;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport handleErrors from './utils/handleErrors';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\ndeclare global {\n  interface Window {\n    csrfToken:any;\n  }\n}\n\nfunction App() {\n  const { search } = window.location || {};\n  const [ user, setUser ] = useState(null);\n\n  useEffect(() => {\n    fetch('/api/verifyUser',{\n      headers: { 'Content-Type': 'application/json', 'x-csrf-token': window.csrfToken },\n      credentials: 'include',\n      cache: \"no-cache\"\n    }).then(handleErrors).then(result => {\n      console.log('verify user result>>>', result);\n      setUser(result);\n    }).catch(err => {\n      console.log('verify error : ', err);\n    });\n  }, []);\n\n  useEffect(() => {\n    if(!user && search) {\n      console.log('search exists!', search);\n      const queryObj = search.replace('?', '').split('&').reduce((acc, item) => {\n        const [ key, value ] = item.split('=');\n        // @ts-ignore\n        acc[key] = value;\n        return acc;\n      }, {});\n      const sessionObj = sessionStorage.getItem('a0.spajs.txs');\n      if(sessionObj) {\n        const body = {\n          ...queryObj,\n          code_verifier: JSON.parse(sessionObj).code_verifier\n        }\n        fetch(`/api/access`, {\n          method: 'POST',\n          body: JSON.stringify(body),\n          headers: { 'Content-Type': 'application/json', 'x-csrf-token': window.csrfToken },\n          credentials: 'include'\n        })\n          .then(handleErrors)\n          .then(result => {\n            console.log('result: ', result);\n            setUser(result);\n          })\n          .catch(e => {\n            console.log('error: ', e);\n          })\n        sessionStorage.removeItem('a0.spajs.txs');\n      }\n    }\n  }, [search, user]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <Login user={user} />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}